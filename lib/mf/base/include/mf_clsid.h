#ifndef _SLD_MF_CLSID_H_
#define _SLD_MF_CLSID_H_

#include <combaseapi.h>

#ifdef __cplusplus
extern "C" {
#endif
	// {3ECA3BEC-23A3-4ACB-BB4C-D9A906116DCD}
	DEFINE_GUID(IID_IMergeTransformContext,
		0x3eca3bec, 0x23a3, 0x4acb, 0xbb, 0x4c, 0xd9, 0xa9, 0x6, 0x11, 0x6d, 0xcd);

	DECLARE_INTERFACE_IID_(IMergeTransformContext, IUnknown, "3ECA3BEC-23A3-4ACB-BB4C-D9A906116DCD")
	{
		STDMETHOD(SetEnableID)(UINT id) PURE;
		STDMETHOD(SetSeletedOnly)(BOOL enable) PURE;

	};

	// {B8960AF1-BFEE-473D-AE97-BBA9D2812708}
	DEFINE_GUID(IID_IPresenter,
		0xb8960af1, 0xbfee, 0x473d, 0xae, 0x97, 0xbb, 0xa9, 0xd2, 0x81, 0x27, 0x8);


	DECLARE_INTERFACE_IID_(IPresenter, IUnknown, "B8960AF1-BFEE-473D-AE97-BBA9D2812708")
	{
		STDMETHOD(SetViewCount)(INT count) PURE;
		STDMETHOD(SetViewPosition)(INT index, FLOAT * position) PURE;
		//STDMETHOD(SetInterlaceMode)(INT index, FLOAT* position) PURE;
		STDMETHOD(SetSelected)(INT index) PURE;
		STDMETHOD(Maximize)() PURE;
		STDMETHOD(ChangeRenderType)() PURE;
		STDMETHOD(EnableCoordinatedCSConverter)(BOOL enable) PURE;	//수신한 Sample원본을 Color space 변환시 전송할 사이즈에 맞춰서 변경
	};
#ifdef __cplusplus
}
#endif

// {7A456E49-262C-4D79-892A-AECE5E8BA5EE}
DEFINE_GUID(CLSID_MF_D3D11_RENDERER,
	0x7a456e49, 0x262c, 0x4d79, 0x89, 0x2a, 0xae, 0xce, 0x5e, 0x8b, 0xa5, 0xee);

// {DF9AD51A-8845-4799-A091-1167A0283901}
DEFINE_GUID(CLSID_MF_D3D11_RENDERER_ACTIVATE,
	0xdf9ad51a, 0x8845, 0x4799, 0xa0, 0x91, 0x11, 0x67, 0xa0, 0x28, 0x39, 0x1);

DEFINE_GUID(MF_MT_ACTIVE_IMAGE_RATIO,
	0x357c63db, 0x4217, 0x498b, 0xa5, 0xf6, 0xa7, 0xec, 0xf5, 0x25, 0xf3, 0x68);

#if defined(_DEBUG)
// {C4945848-E8DC-43A9-BA10-79859996C254}
DEFINE_GUID(CLSID_MF_MERGE_TRANSFORM,
	0xc4945848, 0xe8dc, 0x43a9, 0xba, 0x10, 0x79, 0x85, 0x99, 0x96, 0xc2, 0x54);
// {35B8ECFF-2EA4-4BDB-A83D-7FB97535B62F}
DEFINE_GUID(CLSID_MF_MERGE_TRANSFORM_ACTIVATE,
	0x35b8ecff, 0x2ea4, 0x4bdb, 0xa8, 0x3d, 0x7f, 0xb9, 0x75, 0x35, 0xb6, 0x2f);

#else
// {C9872B55-BF89-4916-9708-474C008CF6FA}
DEFINE_GUID(CLSID_MF_MERGE_TRANSFORM,
	0xc9872b55, 0xbf89, 0x4916, 0x97, 0x8, 0x47, 0x4c, 0x0, 0x8c, 0xf6, 0xfa);
// {BC0929E2-4977-4B1B-9947-1BDF71B50D3D}
DEFINE_GUID(CLSID_MF_MERGE_TRANSFORM_ACTIVATE,
	0xbc0929e2, 0x4977, 0x4b1b, 0x99, 0x47, 0x1b, 0xdf, 0x71, 0xb5, 0xd, 0x3d);
#endif

// {2E7F4D02-3777-445A-9B9E-4B0A52D77EAA}
DEFINE_GUID(CLSID_MF_MULTIVIEW_RENDERER,
	0x2e7f4d02, 0x3777, 0x445a, 0x9b, 0x9e, 0x4b, 0xa, 0x52, 0xd7, 0x7e, 0xaa);
// {8665CF6B-FCE2-4F50-8038-DBEDC7FB7219}
DEFINE_GUID(CLSID_MF_MULTIVIEW_RENDERER_ACTIVATE,
	0x8665cf6b, 0xfce2, 0x4f50, 0x80, 0x38, 0xdb, 0xed, 0xc7, 0xfb, 0x72, 0x19);

DEFINE_GUID(CLSID_MF_SEEK,
	0x478b2787, 0x8205, 0x430c, 0x94, 0xd2, 0x91, 0xcd, 0x6b, 0x61, 0x8b, 0xb6);
// {669C99AD-15C4-44A7-8229-6DEBE6E4EE42}
DEFINE_GUID(CLSID_MF_CURRENT_TIMEUPDATE,
	0x669c99ad, 0x15c4, 0x44a7, 0x82, 0x29, 0x6d, 0xeb, 0xe6, 0xe4, 0xee, 0x42);
// {78B0DD9B-DCD9-41DD-8D20-5383EE157E2F}
DEFINE_GUID(CLSID_MF_PLAY_TOGGLE,
	0x78b0dd9b, 0xdcd9, 0x41dd, 0x8d, 0x20, 0x53, 0x83, 0xee, 0x15, 0x7e, 0x2f);
// {8AB482C9-9B78-4ECF-8819-EC9199DB15B8}
DEFINE_GUID(CLSID_MF_BACK,
	0x8ab482c9, 0x9b78, 0x4ecf, 0x88, 0x19, 0xec, 0x91, 0x99, 0xdb, 0x15, 0xb8);
// {8E651CC7-49C8-44C5-BAF6-C0BD172A2A49}
DEFINE_GUID(CLSID_MF_REPLAY,
	0x8e651cc7, 0x49c8, 0x44c5, 0xba, 0xf6, 0xc0, 0xbd, 0x17, 0x2a, 0x2a, 0x49);

#endif